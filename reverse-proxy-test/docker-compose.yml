version: '3'

services:
  api: # Node.js App
    container_name: gs-api
    build: .
    ports:
      - "3000:3000" # Expose API port
      - "9229:9229" # Expose Node process debug port (disable in production)
    environment: # Set ENV vars
     - NODE_ENV=local
     - ES_HOST=elasticsearch
     - PORT=3000
    volumes:
      - ./smart-tvs:/usr/src/app/smart-tvs
      - ./sample-data:/usr/src/app/sample-data
  reverseproxy: # Nginx Server For Frontend App
    container_name: gs-reverseproxy
    image: nginx
    volumes: # Serve local "public" dir            
      - ./reverseproxy/nginx.conf:/etc/nginx/nginx.conf      
    ports:      
      - "80:80"
    restart: always
  frontend: # Nginx Server For Frontend App
    container_name: gs-frontend
    image: nginx
    volumes: # Serve local "public" dir
      - ./public:/usr/share/nginx/html
      - ./public/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8081:80"
  kibana:
    container_name: gs-kibana
    image: docker.elastic.co/kibana/kibana:6.1.1    
    ports: # Expose kibana ports
      - "5601:5601"
    depends_on:     
      - elasticsearch
  elasticsearch: # Elasticsearch Instance
    container_name: gs-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    volumes: # Persist ES data in seperate "esdata" volume
      - ./elastic-config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports: # Expose Elasticsearch ports
      - "9300:9300"
      - "9200:9200"
volumes: # Define seperate volume for Elasticsearch data
  esdata: